names(fullSet_Mean_Std) <- gsub('GyroJerk',"AngularAcceleration",names(fullSet_Mean_Std))
names(fullSet_Mean_Std) <- gsub('Gyro',"AngularSpeed",names(fullSet_Mean_Std))
names(fullSet_Mean_Std) <- gsub('Mag',"Magnitude",names(fullSet_Mean_Std))
names(fullSet_Mean_Std) <- gsub('^t',"TimeDomain.",names(fullSet_Mean_Std))
names(fullSet_Mean_Std) <- gsub('^f',"FrequencyDomain.",names(fullSet_Mean_Std))
names(fullSet_Mean_Std) <- gsub('-mean()',".Mean",names(fullSet_Mean_Std))
names(fullSet_Mean_Std) <- gsub('-std()',".StandardDeviation",names(fullSet_Mean_Std))
names(fullSet_Mean_Std) <- gsub('Freq\\.',"Frequency.",names(fullSet_Mean_Std))
names(fullSet_Mean_Std) <- gsub('Freq$',"Frequency",names(fullSet_Mean_Std))
IndependentData <- ddply(fullSet_Mean_Std, c("Subject","Activity"), numcolwise(mean))
head(IndependentData)
setwd("C:/Users/Sriram/Desktop/Coursera/Working_Dir/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/")
testSet <- read.table("./test/x_test.txt")
testLabel <- read.table("./test/y_test.txt")
testPerf <- read.table("./test/subject_test.txt")
rSet <- read.table("./train/x_train.txt")
rLabel <- read.table("./train/y_train.txt")
rPerf <- read.table("./train/subject_train.txt")
testSet <- read.table("./test/x_test.txt")
testLabel <- read.table("./test/y_test.txt")
testPerf <- read.table("./test/subject_test.txt")
rSet <- read.table("./train/x_train.txt")
rLabel <- read.table("./train/y_train.txt")
rPerf <- read.table("./train/subject_train.txt")
feat<- read.table("./features.txt")
activityLabel<- read.table("./activity_labels.txt")[,2]
set1<-rbind(rSet,testSet)
names(set1)<-feat[,2]
label<-rbind(rLabel,testLabel)
performer<-rbind(rPerf,testPerf)#subject
performer2<-factor(as.vector(unlist(performer)))
names(performer2)<-"subject"
feat2 <- grepl("mean\\(\\)|std\\(\\)", feat[,2])
set2 <- set1[,feat2]
label[,2] <- activityLabel[label[,1]]
set2n<-names(set2)
set2$activity<-label[,2]
set2$subject<-performer2
library(reshape2)
setMelt<-melt(set2,id=c("activity","subject"),measure.vars=set2n)
set3<-dcast(setMelt,activity+subject~variable,mean)
head(set3)
NEI <- readRDS("summarySCC_PM25.rds")
setwd("C:/Users/Sriram/Desktop/Coursera/Working_Dir")
NEI <- readRDS("data/exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("data/exdata-data-NEI_data/Source_Classification_Code.rds")
library(plyr)
summary <- ddply(NEI, .(year), summarise, Pollution = sum(Emissions))
plot(summary, main="Fine Particulate Matter Levels in the US 1999-2008", ylab = "PM2.5 Emmissions (tons)", xlab = "Year", pch = 2)
fit <- lm(summary$Pollution ~ summary$year)
abline(fit)
motor=SCC[grepl("Motor",SCC$SCC.Level.Three),]
vehicle <- grep("vehicle", SCC$SCC.Level.Two, ignore.case = TRUE)
rawvehicle <- SCC[vehicle,]$SCC
allvehicles <- NEI[NEI$SCC %in% rawvehicle,]
baltimoreVehicles <- allvehicles[allvehicles$fips == "24510",]
totpm25eachyear <- ddply(baltimoreVehicles, .(year), function(x) sum(x$Emissions))
colnames(totpm25eachyear)[2] <- "Emissions"
library(ggplot2)
ggplot(totpm25eachyear, aes(x = year, y = Emissions)) +
geom_line(color = "red", size = 2) + geom_point(color = "red", size = 3) +
ggtitle(expression("Baltimore City" ~ PM[2.5] ~ "Motor Vehicle Emissions by Year")) +
xlab("Year") + ylab(expression("Total" ~ PM[2.5] ~ "Emissions in tons"))
data <- read.csv("RepData_PeerAssessment1/activity.csv")
head(data)
class(data$steps)
class(data$date)
class(data$interval)
levels(data$date)
library(dplyr)
?groupby
data_bydate <- group_by(data, date)
steps_perday <- summarize(data_bydate, sum(steps))
?hist
colnames(steps_perday) <- c("date", "total_steps")
hist(steps_perday$total_steps,
xlab = "Date",
main = "total number of steps taken each day")
hist(steps_perday$total_steps,
xlab = "Steps",
main = "Total number of steps taken each day")
mean(steps_perday$total_steps)
median(steps_perday$total_steps)
mean(steps_perday$total_steps, na.rm = TRUE)
median(steps_perday$total_steps, na.rm = TRUE)
steps_perday <- summarize(data_bydate, sum(steps, na.rm = TRUE))
colnames(steps_perday) <- c("date", "total_steps")
hist(steps_perday$total_steps,
xlab = "Steps",
main = "Total number of steps taken each day")
mean(steps_perday$total_steps, na.rm = TRUE)
median(steps_perday$total_steps, na.rm = TRUE)
?summarize
x <- filter(data, date = "2012-10-01")
x <- filter(data, date == "2012-10-01")
x$steps
x <- filter(data, date == "2012-10-02")
x$steps
x <- filter(data, date == "2012-10-03")
x$steps
x <- filter(data, date == "2012-10-04")
x$steps
x <- filter(data, date == "2012-10-05")
x$steps
x <- filter(data, date == "2012-10-01")
x$steps
sum(x$steps)
y<-group_by(x, date)
z <- summarize(y, sum(steps))
z
z <- summarize(y, sum(steps, na.rm = TRUE))
z
x <- filter(data, date == "2012-10-02")
y<-group_by(x, date)
z <- summarize(y, sum(steps, na.rm = TRUE))
z
z <- summarize(y, sum(steps))
z
x$steps
sum(x$steps)
rm("x")
rm("y")
rm("z")
steps_perday <- summarize(data_bydate, sum(steps))
colnames(steps_perday) <- c("date", "total_steps")
hist(steps_perday$total_steps,
xlab = "Steps",
main = "Total number of steps taken each day")
step_perday
steps_perday
steps_perday <- summarize(data_bydate, sum(steps, na.rm = TRUE))
colnames(steps_perday) <- c("date", "total_steps")
steps_perday
mean(steps_perday$total_steps)
median(steps_perday$total_steps)
x <- c(1:5, NA, 7:10)
sum(x)
sum(x, na.rm = true)
sum(x, na.rm = TRUE)
data_byinterval <- group_by(data, interval)
?average
?avg
summarized <- summarize(data_byinterval, mean(steps, na.rm = TRUE))
colnames(summarized) <- c("interval", "mean_steps")
plot(summarized$interval, summarized$mean_steps, type = "l",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
summarized
summarized
summarized[mean_steps == max(mean_steps),]
summarized[summarized$mean_steps == max(summarized$mean_steps),]
summary(summarized)
summarized[summarized$mean_steps == max(summarized$mean_steps),interval]
summarized[summarized$mean_steps == max(summarized$mean_steps),summarized$interval]
summarized[summarized$mean_steps == max(summarized$mean_steps),]
summarized[summarized$mean_steps == max(summarized$mean_steps),][interval]
summarized[summarized$mean_steps == max(summarized$mean_steps),][summarized$interval]
summarized[summarized$mean_steps == max(summarized$mean_steps),]
max_steps_interval <- summarized[summarized$mean_steps == max(summarized$mean_steps),]
?complete.cases
sum(!complete.cases(data))
rowswithNAs <- sum(!complete.cases(data))
rm("x")
unique(data$interval)
unique(data$steps)
unique(data$date)
sum(is.na(data$steps))
?lapply
x <- 10
summarized[x, 2]
summarized[x, ]
summarized[summarized$interval == x, ]
summarized[summarized$interval == x, 2]
newdata <- data
View(data)
View(data)
lapply(newdata, function(x) {
if(is.na(x$steps)) x$steps <- summarized[summarized$interval == x$interval,2]
} )
View(newdata)
data <- read.csv("RepData_PeerAssessment1/activity.csv")
data_bydate <- group_by(data, date)
library(dplyr)
data_bydate <- group_by(data, date)
steps_perday <- summarize(data_bydate, sum(steps, na.rm = TRUE))
colnames(steps_perday) <- c("date", "total_steps")
hist(steps_perday$total_steps,
xlab = "Steps",
main = "Total number of steps taken each day")
mean(steps_perday$total_steps)
median(steps_perday$total_steps)
data_byinterval <- group_by(data, interval)
summarized <- summarize(data_byinterval, mean(steps, na.rm = TRUE))
colnames(summarized) <- c("interval", "mean_steps")
test <- summarized[1:15,]
test <- summarized[1:15,]
plot(test$interval, test$mean_steps, type = "l",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
View(summarized)
?sprintf
sprintf("%04d", summarized$interval)
?axis.POSIXct()
data$interval <- sprintf("%04d", data$interval)
head(data)
time <- paste(data$date, data$interval)
head(time)
?POSIXct
as.POSIXct(time, format = "%Y-%m-%d %H%M")
data$time <- as.POSIXct(time, format = "%Y-%m-%d %H%M")
as.POSIXct(data$interval, format = "%H%M")
rm("time")
data_byinterval <- group_by(data, interval)
summarized <- summarize(data_byinterval, mean(steps, na.rm = TRUE),)
summarized <- summarize(data_byinterval, mean(steps, na.rm = TRUE))
colnames(summarized) <- c("interval", "mean_steps")
as.POSIXct(summarizedinterval, format = "%H%M")
as.POSIXct(summarized$interval, format = "%H%M")
summarized$interval <- as.POSIXct(summarizedinterval, format = "%H%M")
summarized$interval <- as.POSIXct(summarized$interval, format = "%H%M")
?axis.POSIXct()
test <- summarized[1:15,]
plot(test$interval, test$mean_steps, type = "l",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct()
plot(test$interval, test$mean_steps, type = "l",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(test$interval)
?as.POSIXct(x)
plot(test$interval, test$mean_steps, type = "l",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(test$interval)
?as.POSIXct(x)
axis.POSIXct
?axis.POSIXct
?plot
?axis.POSIXct
plot(test$interval, test$mean_steps, type = "l",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, format = "%H:%M")
plot(test$interval, test$mean_steps, type = "l",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at = seq(test$interval[1], test$interval[2], by = "hour"), format = "%H:%M")
plot(test$interval, test$mean_steps, type = "l",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
plot(test$interval, test$mean_steps, type = "l", xaxt = "n")
axis.POSIXct(1, at = seq(test$interval[1], test$interval[2], by = "hour"), format = "%H:%M")
plot(test$interval, test$mean_steps, type = "l", xaxt = "n")
axis.POSIXct(1, at = seq(test$interval[1], test$interval[2], by = "hour"))
plot(test$interval, test$mean_steps, type = "l", xaxt = "n")
axis.POSIXct(1, at = test$interval)
plot(summarized$interval, summarized$mean_steps, type = "l", xaxt = "n"
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
plot(summarized$interval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at = test$interval)
plot(summarized$interval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at = summarized$interval)
?axis.POSIXct
plot(summarized$interval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at = seq(summarized$interval[1], summarized$interval[2], by = "hour")
)
axis.POSIXct(1, at = summarized$interval)
plot(summarized$interval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at = summarized$interval, labels = 1:24)
plot(summarized$interval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(summarized$interval, at = seq(summarized$interval[1], summarized$interval[12], by = "hour"))
plot(summarized$interval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at=summarized$interval)
?axis.POSIXct
max_steps_interval <- summarized[summarized$mean_steps == max(summarized$mean_steps),]
time(max_steps_interval$interval)
max_steps_interval$interval
paste(hours(max_steps_interval$interval), minutes(max_steps_interval$interval))
paste(hour(max_steps_interval$interval), minute(max_steps_interval$interval))
strftime(max_steps_interval$interval, format="%H:%M")
max <- summarized[summarized$mean_steps == max(summarized$mean_steps),]
max_interval <- strftime(max_steps_interval$interval, format="%H:%M")
summarized <- summarize(data_byinterval, mean(steps, na.rm = TRUE))
colnames(summarized) <- c("interval", "mean_steps")
summarized$newinterval <- as.POSIXct(summarized$interval, format = "%H%M")
plot(summarized$newinterval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at=summarized$newinterval)
max <- summarized[summarized$mean_steps == max(summarized$mean_steps),]
max_interval <- strftime(max$newinterval, format="%H:%M")
data <- read.csv("RepData_PeerAssessment1/activity.csv")
data$interval <- sprintf("%04d", data$interval)
summarized <- summarize(data_byinterval, mean(steps, na.rm = TRUE))
colnames(summarized) <- c("interval", "mean_steps")
newinterval <- as.POSIXct(summarized$interval, format = "%H%M")
plot(newinterval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at=newinterval)
?merge
merge(data, summarized)
newdata <- merge(data, summarized, by.x = "interval", by.y = "interval")
View(newdata)
head(newdata)
?na.locf
library(zoo)
?na.locf
nrow(newdata)
sum(!complete.cases(newdata))
sum(!complete.cases(data))
sum(!is.na(newdata$steps))
sum(is.na(newdata$steps))
for(i in 1:nrow(newdata)) {
if(is.na(newdata[i,2]) {
newdata[i,2] <- newdata[i,4]
}
i <- i + 1
}
for(i in 1:nrow(newdata)) {
if(is.na(newdata[i,2])) {
newdata[i,2] <- newdata[i,4]
}
i <- i + 1
}
head(newdata)
sum(is.na(newdata$steps))
sum(!complete.cases(newdata))
newdata_bydate <- group_by(newdata, date)
newsteps_perday <- summarize(newdata_bydate, sum(steps, na.rm = TRUE))
newsteps_perday <- summarize(newdata_bydate, sum(steps, na.rm = TRUE))
colnames(newsteps_perday) <- c("date", "total_steps")
hist(newsteps_perday$total_steps,
xlab = "Steps",
main = "Total number of steps taken each day")
mean(newsteps_perday$total_steps)
median(newsteps_perday$total_steps)
head(weekdays(newdata$date))
head(weekdays(as.Date(newdata$date)))
newdate$day <- weekdays(as.Date(newdata$date))
newdata$day <- weekdays(as.Date(newdata$date))
head(newdata)
for(i in 1:nrow(newdata)) {
if(newdata[i,5] == "Sunday" | newdata[i,5] == "Saturday") {
newdata[i,5] <- "Weekend"
}
else
newdata[i,5] <- "Weekday"
i <- i + 1
}
head(newdata)
class(newdata$day)
?as.factor
newdata$day <- as.factor(newdata$day)
grouped_data <- group_by(newdata, day, date)
summarized_data <- summarize(grouped_data, mean(steps))
head(summarized_data)
grouped_data <- group_by(newdata, day, interval)
summarized_data <- summarize(grouped_data, mean(steps))
head(summarized_data)
colnames(summarized_data) <- c("day", "interval", "mean_steps")
g <- ggplot(summarized_data, aes(interval, mean_steps))
library(ggplot2)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g + geom_line() + facet_grid(day ~ .) +
labs(y = "Mean steps") +
labs(x = "Interval") +
labs(title = "Average activity pattern")
?ggplt
?ggplot
View(summarized_data)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g + geom_line() + facet_grid(day ~ .)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g + geom_line()
g <- ggplot(summarized_data, aes(interval, mean_steps))
g + geom_point() + facet_grid(day ~ .)
?geom_point
?ggplot
g + geom_point(type = "l") + facet_grid(day ~ .)
?geom_line
g + facet_grid(day ~ .)
g  + geom_point()
g  + geom_line()
g  + geom_line() + facet_grid(day ~ .)
?geom_line
?panel.xyplot
library(lattice)
panel.xyplot(summarized_data$interval, summarized_data$mean_steps,
type = "l",
groups = summarized_data$day)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_point() + facet_grid(day ~ .)
g  + geom_point() + geom_line() + facet_grid(day ~ .)
?geom_line
g  + geom_line(mean_steps) + facet_grid(day ~ .)
g  + geom_line(aes(group = day)) + facet_grid(day ~ .)
new_interval <- as.POSIXct(summarized_data$interval, format = "%H%M")
g <- ggplot(summarized_data, aes(newinterval, mean_steps))
g  + geom_line(aes(group = day)) + facet_grid(day ~ .)
summarized_data$interval <- as.POSIXct(summarized_data$interval, format = "%H%M")
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_line(aes(group = day)) + facet_grid(day ~ .)
g  + geom_line(aes(group = day)) + facet_grid(day ~ .) + axis.POSIXct(1, at = interval)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_line(aes(group = day)) + facet_grid(day ~ .) + axis.POSIXct(1, at =interval)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_line(aes(group = day)) + facet_grid(day ~ .) + axis.POSIXct(1, at =summarized_data$interval)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_line(aes(group = day)) + facet_grid(day ~ .)
?scale_x_datetime
scale_x_datetime(labels = date_format("%H:%M"),breaks = "1 hour")
library(scales)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_line(aes(group = day)) + facet_grid(day ~ .)
scale_x_datetime(labels = date_format("%H:%M"),breaks = "1 hour")
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_line(aes(group = day)) +
scale_x_datetime(labels = date_format("%H:%M"),breaks = "1 hour") +
facet_grid(day ~ .)
g  + geom_line(aes(group = day)) +
scale_x_datetime(labels = date_format("%H:%M"),breaks = "1 hour") +
facet_grid(day ~ .) +
labs(y = "Mean steps") +
labs(x = "Interval") +
labs(title = "Average activity pattern")
data <- read.csv("RepData_PeerAssessment1/activity.csv")
data_bydate <- group_by(data, date)
library(dplyr)
data_bydate <- group_by(data, date)
steps_perday <- summarize(data_bydate, sum(steps, na.rm = TRUE))
colnames(steps_perday) <- c("date", "total_steps")
hist(steps_perday$total_steps,
xlab = "Steps",
main = "Total number of steps taken each day")
mean(steps_perday$total_steps)
median(steps_perday$total_steps)
data$interval <- sprintf("%04d", data$interval)
data_byinterval <- group_by(data, interval)
summarized <- summarize(data_byinterval, mean(steps, na.rm = TRUE))
colnames(summarized) <- c("interval", "mean_steps")
newinterval <- as.POSIXct(summarized$interval, format = "%H%M")
plot(newinterval, summarized$mean_steps, type = "l", xaxt = "n",
xlab = "Interval", ylab = "Mean Steps", main = "Average daily activity pattern")
axis.POSIXct(1, at=newinterval)
max <- summarized[summarized$mean_steps == max(summarized$mean_steps),]
max_interval <- strftime(max$newinterval, format="%H:%M")
max_interval <- strftime(as.POSIXct(max$interval, format = "%H%M"), format="%H:%M")
rowswithNAs <- sum(!complete.cases(data))
newdata <- merge(data, summarized, by.x = "interval", by.y = "interval")
head(newdata)
for(i in 1:nrow(newdata)) {
if(is.na(newdata[i,2])) {
newdata[i,2] <- newdata[i,4]
}
i <- i + 1
}
newdata_bydate <- group_by(newdata, date)
newsteps_perday <- summarize(newdata_bydate, sum(steps))
colnames(newsteps_perday) <- c("date", "total_steps")
hist(newsteps_perday$total_steps,
xlab = "Steps",
main = "Total number of steps taken each day")
mean(newsteps_perday$total_steps)
median(newsteps_perday$total_steps)
newdata$day <- weekdays(as.Date(newdata$date))
for(i in 1:nrow(newdata)) {
if(newdata[i,5] == "Sunday" | newdata[i,5] == "Saturday") {
newdata[i,5] <- "Weekend"
}
else
newdata[i,5] <- "Weekday"
i <- i + 1
}
newdata$day <- as.factor(newdata$day)
grouped_data <- group_by(newdata, day, interval)
summarized_data <- summarize(grouped_data, mean(steps))
colnames(summarized_data) <- c("day", "interval", "mean_steps")
summarized_data$interval <- as.POSIXct(summarized_data$interval, format = "%H%M")
library(ggplot2)
library(scales)
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_line(aes(group = day)) +
scale_x_datetime(labels = date_format("%H:%M"),breaks = "1 hour") +
facet_grid(day ~ .) +
labs(y = "Mean steps") +
labs(x = "Interval") +
labs(title = "Average activity pattern")
g <- ggplot(summarized_data, aes(interval, mean_steps))
g  + geom_line(aes(group = day)) +
scale_x_datetime(labels = date_format("%H:%M"),breaks = "1 hour") +
facet_grid(day ~ .) +
labs(y = "Mean steps") +
labs(x = "Interval") +
labs(title = "Average activity pattern")
?ggplot
g <- ggplot(summarized_data, aes(interval, mean_steps, width = 640))
g  + geom_line(aes(group = day)) +
scale_x_datetime(labels = date_format("%H:%M"),breaks = "1 hour") +
facet_grid(day ~ .) +
labs(y = "Mean steps") +
labs(x = "Interval") +
labs(title = "Average activity pattern")
newmean <- mean(newsteps_perday$total_steps)
newmean
newmedian <- (newsteps_perday$total_steps)
newmwdian
newmedian
newmedian <- median(newsteps_perday$total_steps)
newmedian
getwd()
setwd("C:/Users/Sriram/Desktop/Coursera/Working_Dir/RepData_PeerAssessment1")
library(knitr)
knit2html("PA1_template.Rmd")
browseURL("PA1_template.html")
